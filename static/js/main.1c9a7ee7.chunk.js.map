{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/Navbar/Navbar.module.css","components/Users/users.module.css","assets/img/Us.jpg","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/validators/objects-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","serviceWorker.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.js","utils/validators/validator.js","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersApi","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileApi","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Navbar","className","s","nav","to","News","props","Music","Settings","updateObjectInArray","items","itemId","objectPropName","newObjProps","map","user","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","classNames","selectedPage","pageNumber","key","e","User","src","photos","small","Us","userPhoto","disabled","some","Users","getUsersPage","createSelector","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","size","loginBlock","isAuth","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","maxLength","maxLengthCreator","minLength","minLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","createField","style","formErrorControl","length","stopSubmit","_error","initialized","appReducer","DialogsContainer","lazy","ProfileContainer","App","catchAllErrors","reason","promise","alert","initializeApp","window","addEventListener","removeEventListener","fallback","exact","path","render","withRouter","app","Promise","all","Boolean","location","hostname","match","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebarPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","validators","text","value","role","posts","like","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost"],"mappings":"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","file":"static/js/main.1c9a7ee7.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n       \"API-KEY\": \"b3184acc-33dd-458a-8bce-d3d2b61e4ff0\"\r\n    }\r\n});\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                    return response.data\r\n                });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return profileApi.getProfile(userId)\r\n    }\r\n};\r\n\r\nexport const profileApi = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n};","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hello World'},\r\n        {id: 2, message: 'Hi, how are you?'},\r\n        {id: 3, message: 'Where are you from?'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Abram'},\r\n        {id: 2, name: 'Tom'},\r\n        {id: 3, name: 'John'},\r\n\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1wmzo\",\"item\":\"Navbar_item__3BkWr\",\"activeLink\":\"Navbar_activeLink__1rvn2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__13mts\",\"selectedPage\":\"users_selectedPage__3rXBg\"};","module.exports = __webpack_public_path__ + \"static/media/Us.7d43e5f1.jpg\";","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div>\r\n                <NavLink to=\"/profile\" className=\"text-light\"  >Profile</NavLink>\r\n            </div>\r\n            <div >\r\n                <NavLink to=\"/dialogs\" className=\"text-light \">Messages</NavLink>\r\n            </div>\r\n            <div >\r\n                <NavLink to=\"/users\" className=\"text-light \" >Users</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/news\" className=\"text-light \">News</NavLink>\r\n            </div>\r\n            <div >\r\n                <NavLink to=\"/music\" className=\"text-light \">Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/settings\" className=\"text-light \">Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Music;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport const updateObjectInArray = (items, itemId, objectPropName, newObjProps ) => {\r\n    return items.map(user => {\r\n        if (user[objectPropName] === itemId) {\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user\r\n    })\r\n};","import {usersApi} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/validators/objects-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersApi.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersApi.follow.bind(usersApi), followSuccess)\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi), unfollowSuccess)\r\n    }\r\n};\r\n\r\nexport default usersReducer","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 && <button className=\"btn btn-outline-dark\" onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button> }\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber )\r\n                    .map((p) => {\r\n                    return (\r\n                        <span\r\n                            className={classNames ({\r\n                            [styles.selectedPage] : currentPage === p}, styles.pageNumber)}\r\n                            key={p}\r\n                            onClick={(e) => {onPageChanged(p)}}>\r\n                            {p}\r\n                        </span>)\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button className=\"btn btn-outline-dark\" onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport styles from './users.module.css';\r\nimport Us from '../../assets/img/Us.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, ...props}) => {\r\n    return (\r\n        <div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                                <img src={user.photos.small != null ? user.photos.small : Us}\r\n                                     className={styles.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <button  disabled={props.followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                          onClick={() => {props.unfollow(user.id)}}\r\n                                           className=\"btn btn-dark\">\r\n                                    Unfollow</button>\r\n\r\n                                : <button disabled={props.followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                          onClick={() => {props.follow(user.id)}}\r\n                                          className=\"btn btn-outline-dark\">\r\n                                    Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{user.id}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n            }\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, ...props}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}/>\r\n            <div>\r\n                {\r\n                    props.users.map(user =>\r\n                        <User user={user}\r\n                              key={user.id}\r\n                              followingInProgress={props.followingInProgress}\r\n                              unfollow={props.unfollow}\r\n                              follow={props.follow}>\r\n                        </User>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import { createSelector } from 'reselect'\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersPage = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersPage\r\n} from \"../../redux/users-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { RocketIcon} from '@primer/octicons-react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <RocketIcon size={45}  />\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div> {props.login} - <button className=\"btn btn-outline-dark\" onClick={props.logout}>Log out</button>\r\n                </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'network/auth/GET_CAPTCHA_URL_SUCCESS'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    }else {\r\n        if(response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n};\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router\";\r\nimport style from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst maxLength = maxLengthCreator(30);\r\nconst minLength = minLengthCreator(6);\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field  placeholder={\"Email\"}\r\n                            name={\"email\"}\r\n                            component={Input}\r\n                            validate={[required, maxLength]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        placeholder={\"Password\"}\r\n                        name={\"password\"}\r\n                        type={\"password\"}\r\n                        component={Input}\r\n                        validate={[required, minLength]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Field component={Input}\r\n                           name={\"rememberMe\"}\r\n                           type={\"checkbox\"}\r\n                    /> remember me\r\n                </div>\r\n                {captchaUrl && <img src={captchaUrl}/>}\r\n                {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n                {error && <div className={style.formErrorControl}>\r\n                    {error}\r\n                </div>}\r\n                <div>\r\n                    <button className=\"btn btn-outline-dark\" >Log In</button>\r\n                </div>\r\n            </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if(props.isAuth) {\r\n        return (\r\n            <Route>\r\n                <Redirect to={\"/profile\"}/>\r\n            </Route>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n\r\n}\r\n\r\nexport default appReducer;","import React, {Suspense} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {Switch, withRouter} from \"react-router\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n\n    catchAllErrors = (reason, promise) => {\n        alert(\"Some error\")\n    };\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"error\", this.catchAllErrors)\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"error\", this.catchAllErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n                    <div className=\"app-wrapper\">\n                        <HeaderContainer/>\n                        <Navbar/>\n                        <div className='app-wrapper-content'>\n                            <Suspense fallback={<div>Loading...</div>}>\n                                <Switch>\n                                <Route exact path='/' render={() => <ProfileContainer/>} />\n                                <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n                                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                                </Switch>\n                            </Suspense>\n\n                            <Route path=\"/users\" render={() => <UsersContainer/>}/>\n\n                            <Route path=\"/news\" render={() => <News/>}/>\n\n                            <Route path=\"/music\" render={() => <Music/>}/>\n\n                            <Route path=\"/settings\" render={() => <Settings/>}/>\n\n                            <Route path=\"/login\" render={() => <Login/>}/>\n\n                        </div>\n                    </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nlet initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    , document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")} >\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea  {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}  /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n);","import React from \"react\";\r\n\r\nexport const required = value => {\r\n    if(value)  return undefined;\r\n    return(\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Not valid!!!\r\n            </div>\r\n    )\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return (\r\n        <div className=\"alert alert-primary\" role=\"alert\">\r\n           { `Max length is ${maxLength} symbols`}\r\n        </div>\r\n    );\r\n    return undefined;\r\n};\r\n\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if(value.length < minLength) return (\r\n        <div className=\"alert alert-primary\" role=\"alert\">\r\n            {`Min length is ${minLength} symbols`}\r\n        </div>\r\n    );\r\n    return undefined;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__RLNSn\",\"error\":\"FormsControls_error__195XQ\",\"formErrorControl\":\"FormsControls_formErrorControl__1fENj\"};","import React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"spinner-grow text-secondary\"  role=\"status\"> </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1ZmeF\",\"pageNumber\":\"Paginator_pageNumber__3kE_I\",\"selectedPage\":\"Paginator_selectedPage__Oz5UL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Lfwj\",\"loginBlock\":\"Header_loginBlock__24q73\"};","import {profileApi, usersApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you', like: 10},\r\n        {id: 2, message: 'It\\'s my post', like: 5},\r\n        {id: 3, message: 'I am looking for a job', like: 55}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                like: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const setPhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersApi.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileApi.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await profileApi.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        alert('error')\r\n    }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileApi.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setPhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileApi.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}