{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItems.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Message","className","styles","dialog","message","DialogItem","path","id","activeLink","src","activeClassName","name","maxLength","maxLengthCreator","minLength","minLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","s","dialogsItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,OAAS,wBAAwB,WAAa,8B,sICGjLC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKC,MAAMN,OAMT,kBAACG,EAAcE,KAAKC,OALvB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUC,GAAG,gBANc,GAEXC,IAAML,WActC,OAFqCM,YAAQX,EAARW,CAAoCL,K,uFCb9DM,EANC,SAACJ,GACb,OACI,yBAAKK,UAAWC,IAAOC,QAASP,EAAMQ,U,QCU/BC,EAXI,SAACT,GAChB,IAAIU,EAAO,YAAcV,EAAMW,GAE/B,OACI,yBAAKN,UAAWC,IAAOC,OAAS,IAAMD,IAAOM,YACzC,yBAAKC,IAAI,mGACT,kBAAC,IAAD,CAASZ,GAAIS,EAAMI,gBAAiBR,IAAOM,YAAaZ,EAAMe,Q,iCC0BpEC,EAAYC,YAAiB,KAC7BC,EAAYC,YAAiB,GAmB7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAjBL,SAACrB,GAEpB,OACI,0BAAMuB,SAAUvB,EAAMwB,aAAcnB,UAAU,cAC1C,6BACI,kBAACoB,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUb,EAAWE,GAChCH,KAAK,iBACLe,YAAY,gBAChB,4BAAQzB,UAAU,gBAAlB,aASD0B,EAlDC,SAAC/B,GAEb,IAAIP,EAAQO,EAAMgC,YAEdC,EAAkBxC,EAAMyC,QACvBC,KAAI,SAAA5B,GAAM,OAAI,kBAAC,EAAD,CAAYQ,KAAMR,EAAOQ,KAAMqB,IAAK7B,EAAOI,GAAIA,GAAIJ,EAAOI,QACzE0B,EAAmB5C,EAAM6C,SACxBH,KAAI,SAAA3B,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAAS4B,IAAK5B,EAAQG,QAOpE,OACI,yBAAKN,UAAWkC,IAAEL,SACd,yBAAK7B,UAAWkC,IAAEC,cACbP,GAEL,yBAAK5B,UAAWkC,IAAED,UACd,6BAAMD,IAEV,kBAACjB,EAAD,CAAqBG,SAbT,SAACkB,GACjBzC,EAAM0C,YAAYD,EAAOE,qB,wBCGlBC,sBACXzC,aAhBkB,SAACV,GACnB,MAAO,CACHuC,YAAavC,EAAMuC,gBAIF,SAACa,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAQpC/C,IAFWgD,CAGbb","file":"static/js/4.91148220.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1P3CS\",\"dialogsItems\":\"Dialogs_dialogsItems__1sZwh\",\"messages\":\"Dialogs_messages__a393I\",\"dialog\":\"Dialogs_dialog__2atWx\",\"activeLink\":\"Dialogs_activeLink__1ef_Y\"};","import React from \"react\";\r\nimport {Redirect, Route} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return (\r\n                <Route>\r\n                    <Redirect to=\"/login\"/>\r\n                </Route>\r\n\r\n            );\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return (\r\n        ConnectedAuthRedirectComponent\r\n    );\r\n};","import styles from \"./../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={styles.dialog}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={styles.dialog + ' ' + styles.activeLink}>\r\n            <img src=\"https://s3.amazonaws.com/liberty-uploads/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg\" />\r\n            <NavLink to={path} activeClassName={styles.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItems\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validator\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messagesElements = state.messages\r\n        .map(message => <Message message={message.message} key={message.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst maxLength = maxLengthCreator(100);\r\nconst minLength = minLengthCreator(1);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"form-group\">\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    validate={[required, maxLength, minLength]}\r\n                    name=\"newMessageBody\"\r\n                    placeholder=\"Add message\"/>\r\n                <button className=\"btn btn-dark\">Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}