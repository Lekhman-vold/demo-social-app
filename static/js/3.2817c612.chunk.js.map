{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/img/User.svg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataFormRedux","reduxForm","form","handleSubmit","error","profile","onSubmit","className","style","formErrorControl","s","textBold","createField","Input","type","Textarea","ProfileData","isOwner","gotoEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","Preloader","descriptionBlock","src","photos","large","LogoPng","initialValues","formData","saveProfile","then","event","target","files","length","savePhoto","Post","item","message","likes","like","maxLength","maxLengthCreator","minLength","minLengthCreator","AddNewPostFormRedux","Field","component","name","placeholder","validate","required","MyPosts","memo","postsElements","posts","map","post","key","id","styles","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.2817c612.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect, Route} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return (\r\n                <Route>\r\n                    <Redirect to=\"/login\"/>\r\n                </Route>\r\n\r\n            );\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return (\r\n        ConnectedAuthRedirectComponent\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__DQf26\",\"textBold\":\"ProfileInfo_textBold__2-nqF\",\"contact\":\"ProfileInfo_contact__1SE5p\"};","module.exports = __webpack_public_path__ + \"static/media/User.987d4a2e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2oa27\",\"posts\":\"MyPosts_posts__1Rgsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ual9\",\"likes\":\"Post_likes__37GKx\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                Status: <span onDoubleClick={activateMode}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} value={status} autoFocus={true}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button className=\"btn btn-dark\" >save</button></div>\r\n            {error && <div className={style.formErrorControl}>\r\n                {error}\r\n            </div>}\r\n            <div className={s.textBold}>\r\n                <div> FullName: {createField(\"Full name\", \"fullName\", [], Input)}</div>\r\n                <div>\r\n                    Looking for a job:\r\n                    {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n                </div>\r\n\r\n                <div>\r\n                    My professional skills:\r\n                    {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n                </div>\r\n\r\n                <div>\r\n                    About me:\r\n                    {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataFormRedux = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormRedux;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport LogoPng from \"../../../assets/img/User.svg\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n    const ProfileInfo = (props) => {\r\n\r\n        let [editMode, setEditMode] = useState(false);\r\n\r\n        if (!props.profile) {\r\n            return <Preloader/>\r\n        }\r\n\r\n    const mainPhotoSelected = (event) => {\r\n        if (event.target.files.length) {\r\n            props.savePhoto(event.target.files[0])\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n            props.saveProfile(formData).then(\r\n                () => {setEditMode(false)}\r\n            )\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large || LogoPng}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={props.profile} profile={props.profile}\r\n                                       onSubmit={onSubmit}/>\r\n                    : <ProfileData profile={props.profile}\r\n                                   isOwner={props.isOwner}\r\n                                   gotoEditMode={() => {setEditMode(true)}}\r\n                    />}\r\n                {props.isOwner && <input className=\"form-control bg-dark\"  type={\"file\"} onChange={mainPhotoSelected}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, gotoEditMode}) => {\r\n        return (\r\n            <div className={s.textBold}>\r\n                {isOwner && <div>\r\n                    <button onClick={gotoEditMode}  className=\"btn btn-dark\">edit</button>\r\n                </div>}\r\n                <div> FullName: {profile.fullName}</div>\r\n                <div>\r\n                    Looking for a job: {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n                </div>\r\n                {profile.lookingForAJob &&\r\n                <div>\r\n                    My professional skills: {profile.lookingForAJobDescription}\r\n                </div>\r\n                }\r\n                <div>\r\n                    About me: {profile.aboutMe}\r\n                </div>\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://s3.amazonaws.com/liberty-uploads/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg'/>\r\n            {props.message}\r\n            <div className={s.likes}>\r\n                <img src='https://www.freepnglogos.com/uploads/heart-png/emoji-heart-33.png' />\r\n                <span>{props.like}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from '../Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator, minLengthCreator} from \"../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(20);\r\nconst minLength = minLengthCreator(8);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newPostText\"\r\n                       placeholder={\"Add text\"}\r\n                       validate={[required, maxLength, minLength]}/>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-dark\">Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n        let postsElements = props.posts\r\n            .map(post => <Post key={post.id} message={post.message} like={post.like}/>)\r\n\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={styles.postsBlock}>\r\n                <h3>my post</h3>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={styles.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n)\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\"\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter, withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}